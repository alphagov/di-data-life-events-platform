AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  This creates the necessary serverless components for the Life Events Platform.


Globals:
  Function:
    Timeout: 30
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        POWERTOOLS_TRACER_CAPTURE_ERROR: false
        POWERTOOLS_TRACER_CAPTURE_RESPONSE: false
    Runtime: java17
    Architectures:
      - x86_64
    MemorySize: 512
    KmsKeyArn: !GetAtt MainKmsKey.Arn
    Tracing: Active
    SnapStart:
      ApplyOn: PublishedVersions
    VpcConfig:
      SecurityGroupIds:
        - !Ref LambdaSecurityGroup
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue

Parameters:
  Environment:
    Type: String
    Description: The name of the environment to deploy to
  VpcStackName:
    Type: String
    Description: The name of the stack used to create the VPC
  Developer:
    Type: String
    Description: The name of the developer running the stack in dev
    Default: ""
  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none
  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Default: none

Conditions:
  IsDev:
    !Equals [dev, !Ref Environment]
  IsHmpoDev:
    !And [!Equals [hmpo, !Ref Developer], Condition: IsDev ]
  IsIntegration:
    !Equals [integration, !Ref Environment]
  IsNotProduction:
    !Not [!Equals [production, !Ref Environment]]
  UseCodeSigning:
    !Not [!Equals [none, !Ref CodeSigningConfigArn]]
  UsePermissionsBoundary:
    !Not [!Equals [none, !Ref PermissionsBoundary]]

Mappings:
  EnvironmentConfiguration:
    dev:
      domainName: life-events.dev.account.gov.uk
      txmaAccountArn: arn:aws:iam::248098332657:root
    build:
      domainName: life-events.build.account.gov.uk
      txmaAccountArn: arn:aws:iam::750703655225:root
    staging:
      domainName: life-events.staging.account.gov.uk
      txmaAccountArn: arn:aws:iam::178023842775:root
    integration:
      domainName: life-events.integration.account.gov.uk
      txmaAccountArn: arn:aws:iam::729485541398:root
    production:
      domainName: life-events.account.gov.uk
      txmaAccountArn: arn:aws:iam::451773080033:root

Resources:
  MainKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt the Life Events Platform
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource: "*"

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      # checkov:skip=CKV_AWS_18: The logs bucket doesn't need logging.
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref MainKmsKey
      BucketName: !Sub ${Environment}${Developer}-life-events-logs-bucket
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: PersonalIdentifyingInformation
          Value: true

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda Security Group permissions ruleset
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      SecurityGroupEgress:
        - DestinationSecurityGroupId:
            Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
          Description: Allow outbound traffic to vpc endpoints
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow outbound HTTPS traffic to Internet - The Network Firewall rules will prevent access to anything other than the allowed rules of our VPC
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow outbound SSH traffic to Internet - The Network Firewall rules will prevent access to anything other than the allowed rules of our VPC
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22

  XRayPolicy:
    Type: AWS::XRay::ResourcePolicy
    Properties:
      BypassPolicyLockoutCheck: false
      PolicyName: !Sub "AllowSNSXrayTracing${Developer}"
      PolicyDocument: !Sub "{
          \"Version\": \"2012-10-17\",
          \"Statement\": [
            {
              \"Sid\": \"SNSAccess\",
              \"Effect\": \"Allow\",
              \"Principal\": {
                \"Service\": \"sns.amazonaws.com\"
              },
              \"Action\": [
                \"xray:PutTraceSegments\",
                \"xray:GetSamplingRules\",
                \"xray:GetSamplingTargets\"
              ],
              \"Resource\": \"*\",
              \"Condition\": {
                \"StringEquals\": {
                  \"aws:SourceAccount\": \"${AWS::AccountId}\"
                },
                \"StringLike\": {
                  \"aws:SourceArn\": \"${DeathDistributionTopic.TopicArn}\"
                }
              }
            }
          ]
        }"

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub UserPool-${Environment}${Developer}

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref UserPool
      Domain: !Sub ${Environment}${Developer}-life-events

  AdminUserPoolResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      Identifier: Admin
      Name: AdminUserPoolResourceServer
      Scopes:
        - ScopeDescription: Can manage at an admin level
          ScopeName: Manage
      UserPoolId: !Ref UserPool

  AdminClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - AdminUserPoolResourceServer
    Properties:
      AccessTokenValidity: 60
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - Admin/Manage
      ClientName: AdminClient
      EnableTokenRevocation: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      PreventUserExistenceErrors: ENABLED
      UserPoolId: !Ref UserPool
      TokenValidityUnits:
        AccessToken: minutes

  UserPoolResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      Identifier: EventType
      Name: UserPoolResourceServer
      Scopes:
        - ScopeDescription: Can publish death notification events
          ScopeName: DeathNotification
      UserPoolId: !Ref UserPool

  DwpIntegrationManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IsIntegration
    Properties:
      ManagedPolicyName: dwp-integration-managed-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DwpIntegrationSqsAccess
            Effect: Allow
            Resource:
              - !GetAtt DwpDevDeathDeliveryQueue.Arn
              - !GetAtt DwpTestDeathDeliveryQueue.Arn
              - !GetAtt DwpStageDeathDeliveryQueue.Arn
              - !GetAtt DwpOldFormatConvertedDeathQueue.Arn
            Action:
              - SQS:GetQueueUrl
              - SQS:GetQueueAttributes
              - SQS:ChangeMessageVisibility
              - SQS:ReceiveMessage
              - SQS:DeleteMessage
          - Sid: DwpIntegrationKmsKeyAccess
            Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource:
              - !GetAtt DwpDevDeathKmsKey.Arn
              - !GetAtt DwpTestDeathKmsKey.Arn
              - !GetAtt DwpStageDeathKmsKey.Arn
              - !GetAtt DwpOldFormatDeathKmsKey.Arn

  HmpoDevManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IsHmpoDev
    Properties:
      ManagedPolicyName: hmpo-dev-managed-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: HmpoDevSqsAccess
            Effect: Allow
            Resource:
              - !GetAtt DwpDeathDeliveryQueue.Arn
            Action:
              - SQS:GetQueueUrl
              - SQS:GetQueueAttributes
              - SQS:ChangeMessageVisibility
              - SQS:ReceiveMessage
              - SQS:DeleteMessage
          - Sid: HmpoDevKmsKeyAccess
            Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource:
              - !GetAtt DwpDeathKmsKey.Arn

  DeveloperHostedZone:
    Type: AWS::Route53::HostedZone
    Condition: IsDev
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Join [ ".", [ !Ref Developer, !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ] ] ]

  DeveloperRecordSet:
    Type: AWS::Route53::RecordSet
    Condition: IsDev
    Properties:
      Name: !Join [ ".", [ !Ref Developer, !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ] ] ]
      Type: NS
      HostedZoneId: !ImportValue HostedZoneId
      ResourceRecords: !GetAtt DeveloperHostedZone.NameServers
      TTL: 60

  DevCertificate:
    Type: AWS::CertificateManager::Certificate
    Condition: IsDev
    Properties:
      DomainName: !Join [ ".", [ !Ref Developer, !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ] ] ]
      DomainValidationOptions:
        - DomainName: !Join [ ".", [ !Ref Developer, !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ] ] ]
          HostedZoneId: !Ref DeveloperHostedZone
      ValidationMethod: DNS
      CertificateTransparencyLoggingPreference: ENABLED

  AuditKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric key used to encrypt TxMA audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowTxMADecryption
            Effect: Allow
            Principal:
              AWS: !FindInMap [ EnvironmentConfiguration, !Ref Environment, txmaAccountArn ]
            Action:
              - kms:Decrypt*
            Resource: '*'

  AuditKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}${Developer}/AuditEncryptionKey
      TargetKeyId: !Ref AuditKmsKey

  AuditQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-audit
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !Ref AuditKmsKeyAlias
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AuditDeadLetterQueue.Arn
        maxReceiveCount: 10
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  AuditQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref AuditQueue
      PolicyDocument:
        Statement:
          - Sid: AllowReadByTxMAAccount
            Effect: Allow
            Principal:
              AWS: !FindInMap [ EnvironmentConfiguration, !Ref Environment, txmaAccountArn ]
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt AuditQueue.Arn

  AuditDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-audit-dlq
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !Ref AuditKmsKeyAlias
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      # checkov:skip=CKV_AWS_120: We do not need gateway caching on a post only gateway.
      Auth:
        Authorizers:
          AdminCognitoAuthoriser:
            AuthorizationScopes:
              - Admin/Manage
            UserPoolArn: !GetAtt UserPool.Arn
            Identity:
              Header: Authorization
          DeathCognitoAuthoriser:
            AuthorizationScopes:
              - EventType/DeathNotification
            UserPoolArn: !GetAtt UserPool.Arn
            Identity:
              Header: Authorization
        DefaultAuthorizer: AdminCognitoAuthoriser
      StageName: Prod
      TracingEnabled: true
      Domain:
        DomainName: !If
          - IsDev
          - !Join [ ".", [ !Ref Developer, !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ] ] ]
          - !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ]
        CertificateArn: !If
          - IsDev
          - !Ref DevCertificate
          - !ImportValue CertificateArn
        EndpointConfiguration: REGIONAL
        Route53:
          HostedZoneId: !If
            - IsDev
            - !Ref DeveloperHostedZone
            - Fn::ImportValue: HostedZoneId
          EvaluateTargetHealth: true
          IpV6: true
      AccessLogSetting:
        DestinationArn: !GetAtt ApiGatewayLogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      Tags:
        CheckovRulesToSkip: CKV_AWS_120

  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-access-logs
      RetentionInDays: 14
      KmsKeyId: !GetAtt MainKmsKey.Arn

  DeathValidationDlq:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-death-validation-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DeathEnrichmentQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-death-enrichment
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeathEnrichmentDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DeathEnrichmentDlq:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-death-enrichment-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DeathDistributionTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${Environment}${Developer}-death-distribution-topic
      KmsMasterKeyId: !Ref MainKmsKey
      TracingConfig: Active
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DeathValidationFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - DeathValidationFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-death-validation
      CodeUri: lambdas/death-validation
      Handler: uk.gov.di.data.lep.DeathValidation::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-validation
          TARGET_QUEUE: !GetAtt DeathEnrichmentQueue.QueueUrl
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathApiEvent:
          Type: Api
          Properties:
            Auth:
              Authorizer: DeathCognitoAuthoriser
            RestApiId: !Ref ApiGateway
            Method: POST
            Path: /events/deathNotification/
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DeathValidationDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DeathEnrichmentQueue.QueueName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DeathValidationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-death-validation
      KmsKeyId: !GetAtt MainKmsKey.Arn

  DeathEnrichmentFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - DeathEnrichmentFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-death-enrichment
      CodeUri: lambdas/death-enrichment
      Handler: uk.gov.di.data.lep.DeathEnrichment::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-enrichment
          TARGET_TOPIC: !GetAtt DeathDistributionTopic.TopicArn
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathValidatedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DeathEnrichmentQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DeathEnrichmentDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt DeathDistributionTopic.TopicName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DeathEnrichmentFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-death-enrichment
      KmsKeyId: !GetAtt MainKmsKey.Arn
      Tags:
        - Key: PersonalIdentifyingInformation
          Value: true

  DwpDeathKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt the Death notification delivery queue for DWP
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*

  DwpDeathKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}${Developer}/DwpDeathKmsKey
      TargetKeyId: !Ref DwpDeathKmsKey

  DwpDeathSnsToSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Allow SNS publish to SQS
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: "*"
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref DeathDistributionTopic
      Queues:
        - !Ref DwpDeathMinimisationQueue

  DwpDeathDistributionDlq:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-death-distribution-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDeathDistributionTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt DwpDeathMinimisationQueue.Arn
      TopicArn: !GetAtt DeathDistributionTopic.TopicArn
      RawMessageDelivery: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpDeathDistributionDlq.Arn

  DwpDeathMinimisationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-death-minimisation
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpDeathMinimisationDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDeathMinimisationDlq:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-death-minimisation-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDeathDeliveryQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-death-delivery
      KmsMasterKeyId: !Ref DwpDeathKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpDeathDeliveryDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDeathDeliveryDlq:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-death-delivery-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDeathMinimisationFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - DwpDeathMinimisationFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-dwp-death-minimisation
      CodeUri: lambdas/death-minimisation
      Handler: uk.gov.di.data.lep.DeathMinimisation::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-minimisation
          TARGET_QUEUE: !GetAtt DwpDeathDeliveryQueue.QueueUrl
          ENRICHMENT_FIELDS: NAME, SEX, DEATH_DATE, BIRTH_DATE, ADDRESS
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathEnrichedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DwpDeathMinimisationQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DwpDeathMinimisationDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
            - Sid: DwpKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt DwpDeathKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DwpDeathDeliveryQueue.QueueName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DwpDeathMinimisationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-dwp-death-minimisation
      KmsKeyId: !GetAtt MainKmsKey.Arn

  IntegrationDeathDeliveryQueuePolicy:
    Condition: IsIntegration
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AcquirerAccess
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::731252101191:role/GDS-SQS-Role-nonprod
            Resource: "*"
            Action:
              - SQS:GetQueueUrl
              - SQS:GetQueueAttributes
              - SQS:ChangeMessageVisibility
              - SQS:ReceiveMessage
              - SQS:DeleteMessage
          - Sid: HttpsOnly
            Effect: Deny
            Principal: "*"
            Action: sqs:*
            Resource: "*"
            Condition:
              Bool:
                aws:SecureTransport: false
      Queues:
        - !Ref DwpDevDeathDeliveryQueue
        - !Ref DwpTestDeathDeliveryQueue
        - !Ref DwpStageDeathDeliveryQueue
        - !Ref DwpOldFormatConvertedDeathQueue

  DwpDevDeathKmsKey:
    Condition: IsIntegration
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt the Death notification delivery queue for DWP Dev
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::731252101191:role/GDS-SQS-Role-nonprod
            Resource: "*"
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt

  DwpDevDeathKmsKeyAlias:
    Condition: IsIntegration
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}${Developer}/DwpDevDeathKmsKey
      TargetKeyId: !Ref DwpDevDeathKmsKey

  DwpDevDeathSnsToSqsPolicy:
    Condition: IsIntegration
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Allow SNS publish to SQS
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: "*"
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref DeathDistributionTopic
      Queues:
        - !Ref DwpDevDeathMinimisationQueue

  DwpDevDeathDistributionDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-dev-death-distribution-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDevDeathDistributionTopicSubscription:
    Condition: IsIntegration
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt DwpDevDeathMinimisationQueue.Arn
      TopicArn: !GetAtt DeathDistributionTopic.TopicArn
      RawMessageDelivery: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpDevDeathDistributionDlq.Arn

  DwpDevDeathMinimisationQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-dev-death-minimisation
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpDevDeathMinimisationDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDevDeathMinimisationDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-dev-death-minimisation-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDevDeathDeliveryQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-dev-death-delivery
      KmsMasterKeyId: !Ref DwpDevDeathKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpDevDeathDeliveryDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDevDeathDeliveryDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-dev-death-delivery-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpDevDeathMinimisationFunction:
    Condition: IsIntegration
    Type: AWS::Serverless::Function
    DependsOn:
      - DwpDevDeathMinimisationFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-dwp-dev-death-minimisation
      CodeUri: lambdas/death-minimisation
      Handler: uk.gov.di.data.lep.DeathMinimisation::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-minimisation
          TARGET_QUEUE: !GetAtt DwpDevDeathDeliveryQueue.QueueUrl
          ENRICHMENT_FIELDS: NAME, DEATH_DATE, BIRTH_DATE
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathEnrichedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DwpDevDeathMinimisationQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DwpDevDeathMinimisationDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
            - Sid: DwpDevKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt DwpDevDeathKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DwpDevDeathDeliveryQueue.QueueName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DwpDevDeathMinimisationFunctionLogGroup:
    Condition: IsIntegration
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-dwp-dev-death-minimisation
      KmsKeyId: !GetAtt MainKmsKey.Arn

  DwpTestDeathKmsKey:
    Condition: IsIntegration
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt the Death notification delivery queue for DWP Test
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::731252101191:role/GDS-SQS-Role-nonprod
            Resource: "*"
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt

  DwpTestDeathKmsKeyAlias:
    Condition: IsIntegration
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}${Developer}/DwpTestDeathKmsKey
      TargetKeyId: !Ref DwpTestDeathKmsKey

  DwpTestDeathSnsToSqsPolicy:
    Condition: IsIntegration
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Allow SNS publish to SQS
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: "*"
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref DeathDistributionTopic
      Queues:
        - !Ref DwpTestDeathMinimisationQueue

  DwpTestDeathDistributionDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-test-death-distribution-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpTestDeathDistributionTopicSubscription:
    Condition: IsIntegration
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt DwpTestDeathMinimisationQueue.Arn
      TopicArn: !GetAtt DeathDistributionTopic.TopicArn
      RawMessageDelivery: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpTestDeathDistributionDlq.Arn

  DwpTestDeathMinimisationQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-test-death-minimisation
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpTestDeathMinimisationDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpTestDeathMinimisationDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-test-death-minimisation-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpTestDeathDeliveryQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-test-death-delivery
      KmsMasterKeyId: !Ref DwpTestDeathKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpTestDeathDeliveryDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpTestDeathDeliveryDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-test-death-delivery-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpTestDeathMinimisationFunction:
    Condition: IsIntegration
    Type: AWS::Serverless::Function
    DependsOn:
      - DwpTestDeathMinimisationFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-dwp-test-death-minimisation
      CodeUri: lambdas/death-minimisation
      Handler: uk.gov.di.data.lep.DeathMinimisation::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-minimisation
          TARGET_QUEUE: !GetAtt DwpTestDeathDeliveryQueue.QueueUrl
          ENRICHMENT_FIELDS: NAME, DEATH_DATE, BIRTH_DATE
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathEnrichedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DwpTestDeathMinimisationQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DwpTestDeathMinimisationDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
            - Sid: DwpTestKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt DwpTestDeathKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DwpTestDeathDeliveryQueue.QueueName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DwpTestDeathMinimisationFunctionLogGroup:
    Condition: IsIntegration
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-dwp-test-death-minimisation
      KmsKeyId: !GetAtt MainKmsKey.Arn

  DwpStageDeathKmsKey:
    Condition: IsIntegration
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt the Death notification delivery queue for DWP Stage
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::731252101191:role/GDS-SQS-Role-nonprod
            Resource: "*"
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt

  DwpStageDeathKmsKeyAlias:
    Condition: IsIntegration
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}${Developer}/DwpStageDeathKmsKey
      TargetKeyId: !Ref DwpStageDeathKmsKey

  DwpStageDeathSnsToSqsPolicy:
    Condition: IsIntegration
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Allow SNS publish to SQS
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: "*"
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref DeathDistributionTopic
      Queues:
        - !Ref DwpStageDeathMinimisationQueue

  DwpStageDeathDistributionDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-stage-death-distribution-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpStageDeathDistributionTopicSubscription:
    Condition: IsIntegration
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt DwpStageDeathMinimisationQueue.Arn
      TopicArn: !GetAtt DeathDistributionTopic.TopicArn
      RawMessageDelivery: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpStageDeathDistributionDlq.Arn

  DwpStageDeathMinimisationQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-stage-death-minimisation
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpStageDeathMinimisationDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpStageDeathMinimisationDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-stage-death-minimisation-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpStageDeathDeliveryQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-stage-death-delivery
      KmsMasterKeyId: !Ref DwpStageDeathKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpStageDeathDeliveryDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpStageDeathDeliveryDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-stage-death-delivery-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  DwpStageDeathMinimisationFunction:
    Condition: IsIntegration
    Type: AWS::Serverless::Function
    DependsOn:
      - DwpStageDeathMinimisationFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-dwp-stage-death-minimisation
      CodeUri: lambdas/death-minimisation
      Handler: uk.gov.di.data.lep.DeathMinimisation::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-minimisation
          TARGET_QUEUE: !GetAtt DwpStageDeathDeliveryQueue.QueueUrl
          ENRICHMENT_FIELDS: NAME, DEATH_DATE, BIRTH_DATE
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathEnrichedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DwpStageDeathMinimisationQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DwpStageDeathMinimisationDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
            - Sid: DwpStageKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt DwpStageDeathKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DwpStageDeathDeliveryQueue.QueueName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DwpStageDeathMinimisationFunctionLogGroup:
    Condition: IsIntegration
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-dwp-stage-death-minimisation
      KmsKeyId: !GetAtt MainKmsKey.Arn

  DwpOldFormatDeathKmsKey:
    Condition: IsIntegration
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt the Death notification delivery queue for DWP OldFormat
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::731252101191:role/GDS-SQS-Role-nonprod
            Resource: "*"
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt

  DwpOldFormatDeathKmsKeyAlias:
    Condition: IsIntegration
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}${Developer}/DwpOldFormatDeathKmsKey
      TargetKeyId: !Ref DwpOldFormatDeathKmsKey

  DwpOldFormatDeathSnsToSqsPolicy:
    Condition: IsIntegration
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Allow SNS publish to SQS
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: "*"
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref DeathDistributionTopic
      Queues:
        - !Ref DwpOldFormatDeathMinimisationQueue

  DwpOldFormatDeathDistributionDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-old-format-death-distribution-dlq
      KmsMasterKeyId: !Ref MainKmsKey

  DwpOldFormatDeathDistributionTopicSubscription:
    Condition: IsIntegration
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt DwpOldFormatDeathMinimisationQueue.Arn
      TopicArn: !GetAtt DeathDistributionTopic.TopicArn
      RawMessageDelivery: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpOldFormatDeathDistributionDlq.Arn

  DwpOldFormatDeathMinimisationQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-old-format-death-minimisation
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpOldFormatDeathMinimisationDlq.Arn
        maxReceiveCount: 5

  DwpOldFormatDeathMinimisationDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-old-format-death-minimisation-dlq
      KmsMasterKeyId: !Ref MainKmsKey

  DwpOldFormatDeathDeliveryQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-old-format-death-delivery
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpOldFormatDeathDeliveryDlq.Arn
        maxReceiveCount: 5

  DwpOldFormatDeathDeliveryDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-old-format-death-delivery-dlq
      KmsMasterKeyId: !Ref MainKmsKey

  DwpOldFormatConvertedDeathQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-old-format-convert-format-death
      KmsMasterKeyId: !Ref DwpOldFormatDeathKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DwpOldFormatConvertedDeathDlq.Arn
        maxReceiveCount: 5

  DwpOldFormatConvertedDeathDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-dwp-old-format-convert-format-death-dlq
      KmsMasterKeyId: !Ref MainKmsKey

  DwpOldFormatDeathMinimisationFunction:
    Condition: IsIntegration
    Type: AWS::Serverless::Function
    DependsOn:
      - DwpOldFormatDeathMinimisationFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-dwp-old-format-death-minimisation
      CodeUri: lambdas/death-minimisation
      Handler: uk.gov.di.data.lep.DeathMinimisation::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-minimisation
          TARGET_QUEUE: !GetAtt DwpOldFormatDeathDeliveryQueue.QueueUrl
          ENRICHMENT_FIELDS: NAME, DEATH_DATE, BIRTH_DATE
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathEnrichedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DwpOldFormatDeathMinimisationQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DwpOldFormatDeathMinimisationDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
            - Sid: DwpOldFormatKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt DwpOldFormatDeathKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DwpOldFormatDeathDeliveryQueue.QueueName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DwpOldFormatDeathMinimisationFunctionLogGroup:
    Condition: IsIntegration
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-dwp-old-format-death-minimisation
      KmsKeyId: !GetAtt MainKmsKey.Arn

  DwpOldFormatConvertSetToOldFormatFunction:
    Condition: IsIntegration
    Type: AWS::Serverless::Function
    DependsOn:
      - DwpOldFormatConvertSetToOldFormatFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-swp-old-format-convert-set-to-old-format
      CodeUri: lambdas/convert-set-to-old-format
      Handler: uk.gov.di.data.lep.ConvertSetToOldFormat::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: convert-set-to-old-format
          TARGET_QUEUE: !GetAtt DwpOldFormatConvertedDeathQueue.QueueUrl
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathMinimisedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DwpOldFormatDeathDeliveryQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DwpOldFormatDeathDeliveryDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DwpOldFormatConvertedDeathQueue.QueueUrl
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  DwpOldFormatConvertSetToOldFormatFunctionLogGroup:
    Condition: IsIntegration
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-dwp-old-format-convert-set-to-old-format
      KmsKeyId: !GetAtt MainKmsKey.Arn

  OgdDeathKmsKey:
    Condition: IsIntegration
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt the Death notification delivery queue for OGD
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*

  OgdDeathKmsKeyAlias:
    Condition: IsIntegration
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}${Developer}/OgdDeathKmsKey
      TargetKeyId: !Ref OgdDeathKmsKey

  OgdDeathSnsToSqsPolicy:
    Condition: IsIntegration
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Allow SNS publish to SQS
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource: "*"
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref DeathDistributionTopic
      Queues:
        - !Ref OgdDeathMinimisationQueue

  OgdDeathDistributionDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-ogd-death-distribution-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  OgdDeathDistributionTopicSubscription:
    Condition: IsIntegration
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt OgdDeathMinimisationQueue.Arn
      TopicArn: !GetAtt DeathDistributionTopic.TopicArn
      RawMessageDelivery: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt OgdDeathDistributionDlq.Arn

  OgdDeathMinimisationQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-ogd-death-minimisation
      KmsMasterKeyId: !Ref MainKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt OgdDeathMinimisationDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  OgdDeathMinimisationDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-ogd-death-minimisation-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  OgdDeathDeliveryQueue:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-ogd-death-delivery
      KmsMasterKeyId: !Ref OgdDeathKmsKey
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt OgdDeathDeliveryDlq.Arn
        maxReceiveCount: 5
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  OgdDeathDeliveryDlq:
    Condition: IsIntegration
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}${Developer}-ogd-death-delivery-dlq
      KmsMasterKeyId: !Ref MainKmsKey
      Tags:
         - Key: PersonalIdentifyingInformation
           Value: true

  OgdDeathMinimisationFunction:
    Condition: IsIntegration
    Type: AWS::Serverless::Function
    DependsOn:
      - OgdDeathMinimisationFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-ogd-death-minimisation
      CodeUri: lambdas/death-minimisation
      Handler: uk.gov.di.data.lep.DeathMinimisation::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: death-minimisation
          TARGET_QUEUE: !GetAtt OgdDeathDeliveryQueue.QueueUrl
          ENRICHMENT_FIELDS: NAME, DEATH_DATE, BIRTH_DATE
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Events:
        DeathEnrichedEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt OgdDeathMinimisationQueue.Arn
            BatchSize: 1
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt OgdDeathMinimisationDlq.Arn
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
            - Sid: OgdKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt OgdDeathKmsKey.Arn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt OgdDeathDeliveryQueue.QueueName
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_117.CKV_AWS_173

  OgdDeathMinimisationFunctionLogGroup:
    Condition: IsIntegration
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-ogd-death-minimisation
      KmsKeyId: !GetAtt MainKmsKey.Arn

  OgdDeathNotificationClient:
    Condition: IsIntegration
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - UserPoolResourceServer
    Properties:
      AccessTokenValidity: 60
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - EventType/DeathNotification
      ClientName: !Sub ${Environment}${Developer}-DeathNotificationClient-OGD
      EnableTokenRevocation: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      PreventUserExistenceErrors: ENABLED
      UserPoolId: !Ref UserPool
      TokenValidityUnits:
        AccessToken: minutes

  GroIngestionBucket:
    Type: AWS::S3::Bucket
    Properties:
      # checkov:skip=CKV_AWS_21: We do not want to have versioning in this bucket as are treating it as a temporary store
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref MainKmsKey
      BucketName: !Sub ${Environment}${Developer}-life-events-gro-ingestion-bucket
      LoggingConfiguration:
        DestinationBucketName: !Ref LogsBucket
        LogFilePrefix: gro-ingestion-bucket/log
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: PersonalIdentifyingInformation
          Value: true

  GroRecordsBucket:
    Type: AWS::S3::Bucket
    Properties:
      # checkov:skip=CKV_AWS_21: We do not want to have versioning in this bucket as are treating it as a temporary store
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref MainKmsKey
      BucketName: !Sub ${Environment}${Developer}-life-events-gro-records-bucket
      LoggingConfiguration:
        DestinationBucketName: !Ref LogsBucket
        LogFilePrefix: gro-records-bucket/log
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_21
        - Key: PersonalIdentifyingInformation
          Value: true

  GroIngestionStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${Environment}${Developer}-ingestion-state-machine
      DefinitionUri: groIngestionStepFunction.asl.json
      DefinitionSubstitutions:
        GroConvertToJsonFunctionArn: !GetAtt GroConvertToJsonFunction.Arn
        GroPublishRecordFunctionArn: !GetAtt GroPublishRecordFunction.Arn
      Events:
        GroIngestionTrigger:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.s3
              detail-type:
                - Object Created
              detail:
                bucket:
                  name:
                    - !Ref GroIngestionBucket
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref GroConvertToJsonFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GroPublishRecordFunction
        - S3CrudPolicy:
            BucketName: !Ref GroRecordsBucket
        - S3CrudPolicy:
            BucketName: !Ref GroIngestionBucket
        - StepFunctionsExecutionPolicy:
            StateMachineName: !Sub ${Environment}${Developer}-ingestion-state-machine
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
        - Statement:
            - Sid: CloudWatchLogsAccess
              Effect: Allow
              Action:
                - logs:CreateLogDelivery
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutLogEvents
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
              Resource: "*"
      Tracing:
        Enabled: true
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  GroDeathNotificationClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - UserPoolResourceServer
    Properties:
      AccessTokenValidity: 60
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - EventType/DeathNotification
      ClientName: !Sub ${Environment}${Developer}-GroDeathNotificationClient
      EnableTokenRevocation: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      PreventUserExistenceErrors: ENABLED
      UserPoolId: !Ref UserPool
      TokenValidityUnits:
        AccessToken: minutes

  GroSftpFingerprintSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The fingerprint for the GRO SFTP server
      KmsKeyId: !Ref MainKmsKey
      Name: !Sub ${Environment}${Developer}-gro-sftp-fingerprint

  GroSftpHostSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The host for the GRO SFTP server
      KmsKeyId: !Ref MainKmsKey
      Name: !Sub ${Environment}${Developer}-gro-sftp-host

  GroSftpPrivateKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The Private Key used to access the GRO SFTP server
      KmsKeyId: !Ref MainKmsKey
      Name: !Sub ${Environment}${Developer}-gro-sftp-private-key

  GroSftpPublicKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The Public Key used to access the GRO SFTP server
      KmsKeyId: !Ref MainKmsKey
      Name: !Sub ${Environment}${Developer}-gro-sftp-public-key

  GroSftpSourceDirSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The source directory for the GRO file on the for the GRO SFTP server
      KmsKeyId: !Ref MainKmsKey
      Name: !Sub ${Environment}${Developer}-gro-sftp-source-dir

  GroSftpUsernameSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The username for the GRO SFTP server
      KmsKeyId: !Ref MainKmsKey
      Name: !Sub ${Environment}${Developer}-gro-sftp-username

  GroPullFileFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - GroPullFileFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: We do not want this function to have a DLQ that could contain PII Data, on failure there should be no saved data.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-gro-pull-file
      CodeUri: lambdas/gro-pull-file
      Handler: uk.gov.di.data.lep.GroPullFile::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: gro-pull-file
          GRO_INGESTION_BUCKET_NAME: !Ref GroIngestionBucket
          GRO_SFTP_SERVER_FINGERPRINT_SECRET_ID: !GetAtt GroSftpFingerprintSecret.Id
          GRO_SFTP_SERVER_HOST_SECRET_ID: !GetAtt GroSftpHostSecret.Id
          GRO_SFTP_SERVER_PRIVATE_KEY_SECRET_ID: !GetAtt GroSftpPrivateKeySecret.Id
          GRO_SFTP_SERVER_SOURCE_DIR_SECRET_ID: !GetAtt GroSftpSourceDirSecret.Id
          GRO_SFTP_SERVER_USERNAME_SECRET_ID: !GetAtt GroSftpUsernameSecret.Id
      # PLAT-2133: Uncomment when scheduling allowed
      #      Events:
      #        DailyJob:
      #          Type: ScheduleV2
      #          Properties:
      #            ScheduleExpression: "cron(0 6 * * ? *)" # 06:00 every day
      #            PermissionsBoundary: !If
      #              - UsePermissionsBoundary
      #              - !Ref PermissionsBoundary
      #              - !Ref AWS::NoValue
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GroSftpFingerprintSecret
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GroSftpHostSecret
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GroSftpPrivateKeySecret
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GroSftpSourceDirSecret
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GroSftpUsernameSecret
        - S3WritePolicy:
            BucketName: !Ref GroIngestionBucket
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  GroPullFileFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-gro-pull-file
      KmsKeyId: !GetAtt MainKmsKey.Arn

  GroGenerateXmlFunction:
    Condition: IsNotProduction
    Type: AWS::Serverless::Function
    DependsOn:
      - GroGenerateXmlFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: We do not want this function to have a DLQ that could contain PII Data, on failure there should be no saved data.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-gro-generate-xml
      CodeUri: lambdas/gro-generate-xml
      Handler: uk.gov.di.data.lep.GroGenerateXml::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: gro-generate-xml
          GRO_INGESTION_BUCKET_NAME: !Ref GroIngestionBucket
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Policies:
        - S3WritePolicy:
            BucketName: !Ref GroIngestionBucket
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  GroGenerateXmlFunctionLogGroup:
    Condition: IsNotProduction
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-gro-generate-xml
      KmsKeyId: !GetAtt MainKmsKey.Arn

  GroConvertToJsonFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - GroConvertToJsonFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: We do not want this function to have a DLQ that could contain PII Data, on failure there should be no saved data.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-gro-convert-to-json
      CodeUri: lambdas/gro-convert-to-json
      Handler: uk.gov.di.data.lep.GroConvertToJson::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: gro-convert-to-json
          COGNITO_CLIENT_ID: !Ref GroDeathNotificationClient
          COGNITO_DOMAIN_NAME: !Sub ${Environment}${Developer}-life-events
          USER_POOL_ID: !Ref UserPool
          GRO_RECORDS_BUCKET_NAME: !Ref GroRecordsBucket
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref GroIngestionBucket
        - S3WritePolicy:
            BucketName: !Ref GroRecordsBucket
        - Statement:
            - Sid: DeathNotificationCognitoAccess
              Effect: Allow
              Action:
                - cognito-idp:DescribeUserPoolClient
              Resource:
                - !GetAtt UserPool.Arn
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  GroConvertToJsonFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-gro-convert-to-json
      KmsKeyId: !GetAtt MainKmsKey.Arn

  GroPublishRecordFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - GroPublishRecordFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: We do not want this function to have a DLQ that could contain PII Data, on failure there should be no saved data.
      # checkov:skip=CKV_AWS_117: VPC settings are set globally.
      # checkov:skip=CKV_AWS_173: Encryption settings are set globally.
      FunctionName: !Sub ${Environment}${Developer}-gro-publish-record
      CodeUri: lambdas/gro-publish-record
      Handler: uk.gov.di.data.lep.GroPublishRecord::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: gro-publish-record
          LIFE_EVENTS_PLATFORM_DOMAIN: !If
            - IsDev
            - !Join [ ".", [ !Ref Developer, !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ] ] ]
            - !FindInMap [ EnvironmentConfiguration, !Ref Environment, domainName ]
      AutoPublishAlias: latest
      AutoPublishAliasAllProperties: true
      Policies:
        - Statement:
            - Sid: MainKmsKeyAccess
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                - !GetAtt MainKmsKey.Arn
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  GroPublishRecordFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub /aws/lambda/${Environment}${Developer}-gro-publish-record
      KmsKeyId: !GetAtt MainKmsKey.Arn
      Tags:
        - Key: PersonalIdentifyingInformation
          Value: true

Outputs:
  DwpIntegrationManagedPolicyArn:
    Condition: IsIntegration
    Value: !Ref DwpIntegrationManagedPolicy
    Export:
      Name: DwpIntegrationManagedPolicyArn
  HmpoDevManagedPolicyArn:
    Condition: IsHmpoDev
    Value: !Ref HmpoDevManagedPolicy
    Export:
      Name: HmpoDevManagedPolicyArn
