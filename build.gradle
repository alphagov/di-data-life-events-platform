plugins {
    id "java"
    id "org.sonarqube" version "4.2.1.3168"
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(javaVersion)
    }
}

sonar {
    properties {
        property "sonar.projectKey", "alphagov_di-data-life-events-platform"
        property "sonar.organization", "alphagov"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: 'org.sonarqube'
    sonar {
        properties {
            property 'sonar.coverage.jacoco.xmlReportPaths', "$projectDir.parentFile.path/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

tasks.register("codeCoverageReport", JacocoReport) {
    subprojects { subproject ->
        subproject.tasks.matching({ t -> t.extensions.findByType(JacocoTaskExtension) }).configureEach { testTask ->
            sourceSets subproject.sourceSets.main
            executionData(testTask)
        }

        subproject.tasks.matching({ t -> t.extensions.findByType(JacocoTaskExtension) }).forEach {
            rootProject.tasks.codeCoverageReport.dependsOn(it)
        }
    }

    reports {
        xml.required = true
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
