name: SAM pull request checks

on:
  workflow_dispatch:
  pull_request:
  merge_group:

jobs:
  check:
    name: SAM checkov
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

# Uncomment when we have a SONAR_TOKEN
#      - name: Run SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: SonarQube Quality Gate check
#        id: sonarqube-quality-gate-check
#        uses: sonarsource/sonarqube-quality-gate-action@master
#        timeout-minutes: 5
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#
#      - name: SonarQube Quality Gate Status value
#        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install checkov
        run: pip3 install checkov

      - name: Run checkov
        run: checkov -d . --framework cloudformation -o github_failed_only
