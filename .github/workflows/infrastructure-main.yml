name: Infrastructure - Main

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "terraform/**"
      - ".github/workflows/**"

jobs:
  tf-fmt:
    name: Validate Terraform formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.2

      - name: Check formatting of all Terraform files
        run: terraform fmt -check -diff -recursive

  deploy-terraform:
    needs: tf-fmt
    strategy:
      matrix:
        env: [dev, demo, shared]
      fail-fast: false
    name: Deploy ${{ matrix.env }} Terraform
    runs-on: ubuntu-latest
    environment: ${{ matrix.env }}
    defaults:
      run:
        working-directory: terraform/${{ matrix.env }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up mutex
        uses: ben-z/gh-action-mutex@v1.0-alpha-7
        with:
          branch: ${{ matrix.env }}-mutex-terraform-locking

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::776473272850:role/${{ matrix.env }}-github-oidc-deploy
          role-session-name: deploy-terraform
          aws-region: eu-west-2
          mask-aws-account-id: false

      - name: Set up Terraform
        # Exposes stdout, stderr and exitcode as outputs for any steps that run terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.2

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Plan
        id: plan
        # Terraform's "detailed-exitcode" codes are: 0 for "no changes", 1 for errors, 2 for "valid changes"
        # Output a plan even though we don't use it here - we need the printed output to be the same as in the apply job below
        # We don't save the plan as an artefact as it's sensitive and this repo is public
        run: terraform plan -no-color -input=false -detailed-exitcode -out=plan.tfplan -var-file=../tfvars/non-prod/${{ matrix.env }}.tfvars
        continue-on-error: true

      - name: Fail job if plan failed
        run: if [ ${{ steps.plan.outputs.exitcode }} -eq 1 ]; then exit 1; else exit 0; fi

      - name: Terraform Apply
        if: steps.plan.outputs.exitcode == 2
        run: terraform apply -auto-approve -input=false plan.tfplan
