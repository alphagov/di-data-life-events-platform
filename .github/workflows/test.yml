name: Test

on:
  workflow_call:
    secrets:
      SAM_APP_VALIDATE_ROLE_ARN:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  sonarcloud:
    name: Run SonarCloud
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # This is needed for SonarCloud scanning

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and unit tests
        run: ./gradlew clean build

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test results
          path: ${{ github.workspace }}/**/build/test-results/test/TEST-*.xml
          reporter: java-junit
          only-summary: true

      - name: Perform Static Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar

  checkov:
    name: SAM checkov
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install checkov
        run: pip3 install checkov

      - name: Run checkov
        run: checkov -d . --framework cloudformation -o github_failed_only

  validate:
    name: SAM validate
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v2
        if: always()
        with:
          role-to-assume: ${{ secrets.SAM_APP_VALIDATE_ROLE_ARN }}
          role-session-name: validate-sam
          aws-region: eu-west-2

      - name: SAM validate
        run: sam validate --lint
