name: Build and push

on:
  workflow_call:
    inputs:
      push:
        required: true
        type: boolean
        default: false
        description: Whether to push the image, or otherwise just build
    secrets:
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_ACCOUNT:
        required: true
    outputs:
      image:
        value: ${{ jobs.build-image.outputs.image }}

jobs:
  build-image:
    name: Build Docker image ${{ inputs.push && 'and push to ECR' || '' }}
    environment: dev
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push-image.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag image
        id: build-image
        env:
          CONTEXT: ./
          ECR_REPOSITORY: ${{ secrets.AWS_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com
          IMAGE_TAG: ${{ github.sha }}
          IMAGE_NAME: gdx-data-share-poc
        run: |
          docker build -t $ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG $CONTEXT

      - name: Push base image to Amazon ECR
        if: inputs.push
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com
          IMAGE_TAG: ${{ github.sha }}
          IMAGE_NAME: gdx-data-share-poc
        run: |
          docker push $ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
          echo "image=$ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

  tag-environments:
    name: Tag docker image for ${{ matrix.env }} environment
    needs: build-image
    if: inputs.push
    strategy:
      matrix:
        env: [dev, demo]
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Add tag for ${{ matrix.env }} environment
        uses: abronin/ecr-retag-action@v1
        with:
          repository: gdx-data-share-poc
          tag: ${{ github.sha }}
          new-tags: ${{ matrix.env }}
