version: "3"
services:
  gdx-data-share-poc:
    image: quay.io/governmentdigitalservices/gdx-data-share-poc:latest
    networks:
      - gds
      - hmpo
    container_name: gdx-data-share-poc
    depends_on:
      - datashare-db
      - localstack
      - oauth2
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - HMPPS_SQS_LOCALSTACK_URL=http://localstack:4566
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev,localstack
      - API_BASE_URL_ISSUER_URI=http://oauth2:8080/issuer1
      - API_BASE_URL_OAUTH=http://oauth2:8080/issuer1
      - API_BASE_URL_LEV=http://lev-api:8080
      - API_BASE_URL_DATA_RECEIVER=http://gdx-data-share-poc:8080
      - SPRING_FLYWAY_URL=jdbc:postgresql://datashare-db:5432/datashare?sslmode=prefer
      - SPRING_R2DBC_URL=r2dbc:postgresql://datashare-db:5432/datashare?sslmode=prefer
      - API_BASE_S3_INGRESS_BUCKET=dev-ingress-gdx-data-share-poc
      - API_BASE_S3_INGRESS_ARCHIVE_BUCKET=dev-ingress-archive-gdx-data-share-poc

  localstack:
    image: localstack/localstack:1.3.1
    networks:
      - gds
    container_name: localstack
    ports:
      - "4566:4566"
      - "8999:8080"
    environment:
      - SERVICES=sns,sqs,s3
      - DEBUG=${DEBUG- }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_EXECUTION_ENV=True

  datashare-db:
    image: postgres
    networks:
      - gds
    container_name: datashare-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=datashare
      - POSTGRES_USER=datashare
      - POSTGRES_DB=datashare

  lev-api:
    image: quay.io/governmentdigitalservices/lev-api:latest
    container_name: lev-api
    networks:
      - hmpo
    environment:
      - LISTEN_HOST=0.0.0.0
      - LISTEN_PORT=8080
      - POSTGRES_USER=lev
      - POSTGRES_PASSWORD=lev
      - POSTGRES_HOST=lev-db
      - POSTGRES_ADMIN_USER=root
      - POSTGRES_ADMIN_PASSWORD=root
      - POSTGRES_SSL=FALSE
    ports:
      - "8099:8080"
  lev-db:
    build:
      context: lev-data/
    networks:
      - hmpo
    container_name: lev-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=lev
      - APP_USER=lev
      - APP_PASSWORD=lev
    ports:
      - "5433:5432"

  oauth2:
    image: ghcr.io/navikt/mock-oauth2-server:0.5.6
    container_name: oauth2
    networks:
      - gds
    ports:
      - "9090:8080"
    environment:
      - JSON_CONFIG_PATH=/tmp/config.json
      - SERVER_PORT=8080
    volumes:
      - ${PWD}/oauth2-data:/tmp/

networks:
  gds:
  hmpo:

